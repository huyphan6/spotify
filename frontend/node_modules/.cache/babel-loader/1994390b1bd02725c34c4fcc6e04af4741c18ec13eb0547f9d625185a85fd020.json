{"ast":null,"code":"var _jsxFileName = \"/Users/huyphan/spotify/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sample = () => {\n  _s();\n  const [sample, setSample] = useState(\"\");\n  const [sampleList, setsampleList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleInputChange = e => {\n    setSample(e.target.value);\n  };\n  const getSample = () => {\n    setLoading(true);\n    axios.post(\"http://127.0.0.1:5000/getSample\", {\n      sample\n    }).then(res => {\n      console.log(\"it worked\");\n      setsampleList(res.data.items);\n      setLoading(false);\n    }).catch(err => {\n      console.log(\"it failed\");\n      console.error(err);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Samples!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sample,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSample,\n      children: \"Get Sample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sampleList.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [track.track.name, \" by \", track.track.artists[0].name]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Sample, \"Bx2FOtHP5rzme2FJ7e9A5ojNCCo=\");\n_c = Sample;\nexport default Sample;\nvar _c;\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["React","useState","axios","Sample","sample","setSample","sampleList","setsampleList","loading","setLoading","handleInputChange","e","target","value","getSample","post","then","res","console","log","data","items","catch","err","error","map","track","name","artists","id"],"sources":["/Users/huyphan/spotify/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Sample = () => {\n  const [sample, setSample] = useState(\"\");\n  const [sampleList, setsampleList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = (e) => {\n    setSample(e.target.value);\n  };\n\n  const getSample = () => {\n    setLoading(true);\n    axios\n      .post(\"http://127.0.0.1:5000/getSample\", { sample })\n      .then((res) => {\n        console.log(\"it worked\")\n        setsampleList(res.data.items);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(\"it failed\")\n        console.error(err);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <div display=\"flex\" justifyContent=\"center\">\n      <h1>Find Samples!</h1>\n      <input type=\"text\" value={sample} onChange={handleInputChange} />\n      </div>\n      <button onClick={getSample}>Get Sample</button>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {sampleList.map((track) => (\n            <li key={track.track.id}>\n              {track.track.name} by {track.track.artists[0].name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Sample;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,SAAS,GAAG,MAAM;IACtBL,UAAU,CAAC,IAAI,CAAC;IAChBP,KAAK,CACFa,IAAI,CAAC,iCAAiC,EAAE;MAAEX;IAAO,CAAC,CAAC,CACnDY,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBZ,aAAa,CAACU,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC;MAC7BZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;MACdL,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBD,OAAO,CAACM,KAAK,CAACD,GAAG,CAAC;MAClBd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,OAAO,EAAC,MAAM;MAAC,cAAc,EAAC,QAAQ;MAAA,wBAC3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACtB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEL,MAAO;QAAC,QAAQ,EAAEM;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D,eACN;MAAQ,OAAO,EAAEI,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,EAC9CN,OAAO,gBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,gBAErB;MAAA,UACGF,UAAU,CAACmB,GAAG,CAAEC,KAAK,iBACpB;QAAA,WACGA,KAAK,CAACA,KAAK,CAACC,IAAI,UAAMD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;MAAA,GAD3CD,KAAK,CAACA,KAAK,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAGxB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA7CI1B,MAAM;AAAA,KAANA,MAAM;AA+CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}